#!/usr/bin/env bash

# ./bin/duster:                    lint with all
# ./bin/duster fix:                fix with all
# ./bin/duster phpcs:              lint with phpcs
# ./bin/duster phpcs fix:          fix with phpcbf (phpcs fixer)
# ./bin/duster phpcsfixer:         lint with php-cs-fixer
# ./bin/duster phpcsfixer fix:     fix with php-cs-fixer
# ./bin/duster tlint:              lint with tlint
# ./bin/duster tlint fix:          fix with tlint
# ./bin/duster init:               initialize
# ./bin/duster publish:            publish config files for potential customization
# ./bin/duster publish phpcs:      publish PHPCS config file
# ./bin/duster publish phpcsfixer: publish PHP-CS-Fixer file
# ./bin/duster publish tlint:      publish config files for potential customization

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
SYM_DIR="$( dirname "$( readlink ${BASH_SOURCE[0]} )" )"
BIN_DIR="${DIR}/${SYM_DIR}"

if [[ $# == 0 ]]; then
  filename="lint"
elif [[ $# == 1 ]]; then
  if [[ $1 == "fix" ]]; then
    filename="fix"
  elif [[ $1 == 'init' ]]; then
    filename="init"
  elif [[ $1 == 'help' ]]; then
    filename="help"
  elif [[ $1 == 'publish' ]]; then
    filename="publish"
  else
    filename="lint-$1"
  fi
else
  if [[ $1 == 'publish' ]]; then
    filename="publish-$2"
  else
    filename="fix-$1"
  fi
fi

filename="$BIN_DIR/actions/$filename"

if [ ! -f "$filename" ]; then
  printf "\nSorry, that is an invalid selection.\n[$filename does not exist]\n"

  exit
fi

. $filename
